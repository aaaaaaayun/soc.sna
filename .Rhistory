tal
3 <  tal          # Større end
3 >  tal          # Mindre end
3 <= tal          # Større end eller lig med
matrice
matrice %in% c(1,3,6)  # Fællesmængden
tekst[1]
tekst
tekst[1:2]
tekst[c(1,3,4)]
tekst[-c(1,3,4)]
tekst[5]
tekst
tekst == "abe"
tekst[tekst == "abe"]
tekst[tekst != "abe"]
tekst == "abe"
a <- tekst == "abe" | tekst == "gris"
tekst[a]
tekst[a==FALSE]
tekst
which(tekst=="måge")
b <- which(tekst=="måge")
b
matrice
matrice[2,2]
matrice[1:2,]
foder <- matrice[,2]
matrice[,2]
foder <- matrice[,2]
foder
df
str(df)
df[,1]
df$Antal
df
df$Ris <- rep("Ris", 4)
df
download.file("https://raw.github.com/antongrau/soc.sna/master/Organisation_BIQ_top_U.csv", destfile="Organisation_BIQ_top_U.csv")
virk   <- read.csv(file="Organisation_BIQ_top_U.csv", sep="|", fileEncoding="UTF-8", dec = ",")
str(virk)
an     <- data.frame(virk$ORG_NAVN, virk$ANSATTE.10, virk$EGENKAPITAL.10)
str(an)
order(an$virk.ANSATTE.10, decreasing=TRUE)
ano    <- an[order(an$virk.ANSATTE.10, decreasing=TRUE),]
ano
ano[1:20,]
order(an$virk.ANSATTE.10, decreasing=TRUE)
an$virk.ANSATTE.10
order(an$virk.ANSATTE.10, decreasing=TRUE)
abe     <- c("A", "B", "E")
snegl   <- matrix(1:10, ncol=2)
listen  <- list(abe, snegl)
listen
listen[[1]]   # Rigtigt!
listen[1]     # Forkert!  Fordi den henter det første element ud som list
listen  <- list(abe=abe, snegl=snegl)
str(listen)
length(listen)
listen$snegl
eksempel <- data.frame(virk$OMSÆTNING.10, virk$ANSATTE.10, virk$EGENKAPITAL.10, virk$BALANCE.10)
eksempel <- eksempel[complete.cases(eksempel),]
str(eksempel)
fact <- factanal(eksempel, 1)
fact
str(fact)
fact$loadings
fact$criteria
fact$uniquenesses
fact$listen <- listen  # Vi kan assigne ind i noget der ikke findes!
str(fact)
str(virk)
View(an)
download.file("https://raw.github.com/antongrau/soc.sna/master/Organisation_BIQ_top_U.csv", destfile="Organisation_BIQ_top_U.csv")
omsætning <- virk$OMSÆTNING.10 # Omsætning i millioner kr. i 2010
ma    <- max(omsætning, na.rm=TRUE)
ma
mi    <- min(omsætning, na.rm=TRUE)
med   <- median(omsætning, na.rm=TRUE)
ma/mi
navn <- virk$ORG_NAVN # Virksomhedens navn
names(omsætning) <- navn
which(omsætning==ma)
omsætning[which(omsætning==ma)]
omsætning[which(omsætning==mi)]
omsætning[which(omsætning==med)]
navn[which(omsætning==med)]
pb <- txtProgressBar(min = 0, max = total, style = 3)
setwd("~/My Dropbox/R")
setwd("~/My Dropbox/R")
library(RCurl)
?RCurl
?curl
??RCurl
?postForm
getForm("http://www.google.com/search", hl="en", lr="", ie="ISO-8859-1",  q="site:http://www.advokatnoeglen.dk/advokat/", btnG="Search")
examples(getForm)
example(getForm)
getURL("http://www.google.com/search?hl=en&lr=&ie=ISO-8859-1&q=RCurl&btnG=Search")
getForm("http://www.google.com/search", hl="en", lr="", ie="ISO-8859-1",  q="RCurl", btnG="Search")
getURL("http://www.google.com/search?hl=en&lr=&ie=ISO-8859-1&q=RCurl&btnG=Search")
getForm("http://www.google.com/search", hl="en", lr="", ie="ISO-8859-1",  q="RCurl", btnG="Search")
getForm("http://www.google.com/search", .params = c(hl="en", lr="", ie="ISO-8859-1",  q="RCurl", btnG="Search"))
getForm("http://www.google.com/search", hl="en", lr="", ie="ISO-8859-1",  q="RCurl", btnG="Search")
getForm("http://www.google.com/search", hl="en", lr="", ie="ISO-8859-1",  q="site:http://www.advokatnoeglen.dk/advokat/", btnG="Search")
getForm("http://www.google.com/search", hl="en", lr="", ie="ISO-8859-1",  q="site:http://www.advokatnoeglen.dk/advokat/", btnG="Search")
getURL("http://www.advokatnoeglen.dk/advokat/erik-vermeij")
library(XML)
install.packages(XML)
install.packages("XML")
library(XML)
library(RCurl)
getGoogleURL <- function(search.term, domain = '.co.uk', quotes=TRUE) {
+   search.term <- gsub(' ', '%20', search.term)
+   if(quotes) search.term <- paste('%22', search.term, '%22', sep='')
+   getGoogleURL <- paste('http://www.google', domain, '/search?q=',
search.term, sep='')
+ }
getGoogleLinks <- function(google.url) {
+   doc <- getURL(google.url, httpheader = c("User-Agent" = "R
{}
/
\
getGoogleURL <- function(search.term, domain = '.co.uk', quotes=TRUE) {
search.term <- gsub(' ', '%20', search.term)
if(quotes) search.term <- paste('%22', search.term, '%22', sep='')
getGoogleURL <- paste('http://www.google', domain, '/search?q=',
search.term, sep='')
}
getGoogleLinks <- function(google.url) {
doc <- getURL(google.url, httpheader = c("User-Agent" = "R
(2.10.0)"))
html <- htmlTreeParse(doc, useInternalNodes = TRUE, error=function
(...){})
## the next line is very important to parse the html ##
nodes <- getNodeSet(html, "//a[@href][@class='l']")
return(sapply(nodes, function(x) x <- xmlAttrs(x)[[1]]))
}
search.term <- "cran"
quotes <- "FALSE"
search.url <- getGoogleURL(search.term=search.term, quotes=quotes)
links <- getGoogleLinks(search.url)
links
search.url
getGoogleURL <- function(search.term, domain = '.com', quotes=TRUE) {
search.term <- gsub(' ', '%20', search.term)
if(quotes) search.term <- paste('%22', search.term, '%22', sep='')
getGoogleURL <- paste('http://www.google', domain, '/search?q=',
search.term, sep='')
}
search.url <- getGoogleURL(search.term=search.term, quotes=quotes)
search.url
links <- getGoogleLinks(search.url)
links
setwd("~/Dropbox/R/soc.sna/")
kvinder <- read.csv(file="fornavne 2012 - kvinder.txt", sep="\t", skip=1, fileEncoding="latin1", stringsAsFactors=FALSE)
str(kvinder)
kvinder[, -1] <- apply(kvinder[, -1], 2, as.numeric)
kvinder[is.na(kvinder)] <- 0
mænd <- read.csv(file="fornavne 2012 - mænd.txt", sep="\t", skip=1, fileEncoding="latin1", stringsAsFactors=FALSE)
str(mænd)
mænd[, -1] <- apply(mænd[, -1], 2, as.numeric)
mænd[is.na(mænd)] <- 0
mænd.navn     <- mænd$Drengenavn
kvinder.navn  <- kvinder$Pigenavn
#### Scenariet hvor det er alle generationer af mænd og kvinder
mænd.antal <- mænd$I.alt
kvinder.antal <- kvinder$I.alt
bi.navne.ind.mænd <- mænd.navn %in% kvinder.navn
summary(bi.navne.ind.mænd)
bi.navne.ind.kvinder <- kvinder.navn %in% mænd.navn
summary(bi.navne.ind.kvinder)
bi.navne.mænd      <- mænd.navn[bi.navne.ind.mænd]
bi.antal.mænd      <- mænd.antal[bi.navne.ind.mænd]
bi.navne.kvinder   <- kvinder.navn[bi.navne.ind.kvinder]
bi.antal.kvinder   <- kvinder.antal[bi.navne.ind.kvinder]
bi.kvinder         <- data.frame(bi.navne.kvinder, bi.antal.kvinder)
bi.mænd            <- data.frame(bi.navne.mænd, bi.antal.mænd)
bi.kvinder         <- bi.kvinder[order(bi.navne.kvinder),]
bi.mænd            <- bi.mænd[order(bi.navne.mænd),]
identical(bi.mænd[,1], bi.kvinder[,1])
#
bi <- data.frame(bi.kvinder, bi.mænd$bi.antal.mænd, begge.antal, andel.mænd)
bi <- bi[order(begge.antal, decreasing=TRUE),]
### Her bygger vi den endelige matrice
antal.bi           <- sum(bi.navne.ind.mænd)
mat.length         <- length(mænd.navn) + length(kvinder.navn) - antal.bi
navne.mat          <- as.data.frame(matrix(nrow=mat.length, ncol=5))
colnames(navne.mat) <- c("Navn", "Kvinder", "Mænd", "Samlet", "Andel.mænd")
mænd.ind           <- 1:(length(mænd.navn)-antal.bi)
kvinder.ind        <- 1:(length(kvinder.navn)-antal.bi) + max(mænd.ind)
bi.ind             <- 1:length(bi.navne.mænd) + max(kvinder.ind)
navne.mat$Navn[mænd.ind]         <- mænd.navn[bi.navne.ind.mænd==FALSE]
navne.mat$Mænd[mænd.ind]         <- mænd.antal[bi.navne.ind.mænd==FALSE]
navne.mat$Navn[kvinder.ind]      <- kvinder.navn[bi.navne.ind.kvinder==FALSE]
navne.mat$Kvinder[kvinder.ind]   <- kvinder.antal[bi.navne.ind.kvinder==FALSE]
navne.mat$Navn[bi.ind]           <- as.character(bi[,1])
navne.mat$Kvinder[bi.ind]        <- bi[,2]
navne.mat$Mænd[bi.ind]           <- bi[,3]
navne.mat[is.na(navne.mat)]      <- 0
navne.mat$Samlet                 <- navne.mat$Kvinder + navne.mat$Mænd
navne.mat$Andel.mænd             <- navne.mat$Mænd / navne.mat$Samlet
b <- c(0, 0.3, 0.7, 1)
kategori <- cut(navne.mat$Andel.mænd, b, include.lowest=TRUE, labels=c("Kvinde", "Binominal", "Mand"))
navne.mat$Kategori               <- kategori
names.gender                     <- navne.mat
save(names.gender, file="names_gender")
write.table(names.gender, file="names_gender.csv", sep="|")
setwd("~/Dropbox/R/soc.sna/")
kvinder <- read.csv(file="fornavne 2012 - kvinder.txt", sep="\t", skip=1, fileEncoding="latin1", stringsAsFactors=FALSE)
str(kvinder)
kvinder[, -1] <- apply(kvinder[, -1], 2, as.numeric)
kvinder[is.na(kvinder)] <- 0
mænd <- read.csv(file="fornavne 2012 - mænd.txt", sep="\t", skip=1, fileEncoding="latin1", stringsAsFactors=FALSE)
str(mænd)
mænd[, -1] <- apply(mænd[, -1], 2, as.numeric)
mænd[is.na(mænd)] <- 0
mænd.navn     <- mænd$Drengenavn
kvinder.navn  <- kvinder$Pigenavn
#### Scenariet hvor det er alle generationer af mænd og kvinder
mænd.antal <- mænd$I.alt
kvinder.antal <- kvinder$I.alt
bi.navne.ind.mænd <- mænd.navn %in% kvinder.navn
summary(bi.navne.ind.mænd)
bi.navne.ind.kvinder <- kvinder.navn %in% mænd.navn
summary(bi.navne.ind.kvinder)
bi.navne.mænd      <- mænd.navn[bi.navne.ind.mænd]
bi.antal.mænd      <- mænd.antal[bi.navne.ind.mænd]
bi.navne.kvinder   <- kvinder.navn[bi.navne.ind.kvinder]
bi.antal.kvinder   <- kvinder.antal[bi.navne.ind.kvinder]
bi.kvinder         <- data.frame(bi.navne.kvinder, bi.antal.kvinder)
bi.mænd            <- data.frame(bi.navne.mænd, bi.antal.mænd)
bi.kvinder         <- bi.kvinder[order(bi.navne.kvinder),]
bi.mænd            <- bi.mænd[order(bi.navne.mænd),]
identical(bi.mænd[,1], bi.kvinder[,1])
#
# begge.antal        <-  bi.mænd$bi.antal.mænd + bi.kvinder$bi.antal.kvinder
bi <- data.frame(bi.kvinder, bi.mænd$bi.antal.mænd, begge.antal, andel.mænd)
bi <- data.frame(bi.kvinder, bi.mænd$bi.antal.mænd)
bi <- bi[order(begge.antal, decreasing=TRUE),]
bi <- data.frame(bi.kvinder, bi.mænd$bi.antal.mænd)
antal.bi           <- sum(bi.navne.ind.mænd)
mat.length         <- length(mænd.navn) + length(kvinder.navn) - antal.bi
navne.mat          <- as.data.frame(matrix(nrow=mat.length, ncol=5))
colnames(navne.mat) <- c("Navn", "Kvinder", "Mænd", "Samlet", "Andel.mænd")
mænd.ind           <- 1:(length(mænd.navn)-antal.bi)
kvinder.ind        <- 1:(length(kvinder.navn)-antal.bi) + max(mænd.ind)
bi.ind             <- 1:length(bi.navne.mænd) + max(kvinder.ind)
navne.mat$Navn[mænd.ind]         <- mænd.navn[bi.navne.ind.mænd==FALSE]
navne.mat$Mænd[mænd.ind]         <- mænd.antal[bi.navne.ind.mænd==FALSE]
navne.mat$Navn[kvinder.ind]      <- kvinder.navn[bi.navne.ind.kvinder==FALSE]
navne.mat$Kvinder[kvinder.ind]   <- kvinder.antal[bi.navne.ind.kvinder==FALSE]
navne.mat$Navn[bi.ind]           <- as.character(bi[,1])
navne.mat$Kvinder[bi.ind]        <- bi[,2]
navne.mat$Mænd[bi.ind]           <- bi[,3]
navne.mat[is.na(navne.mat)]      <- 0
navne.mat$Samlet                 <- navne.mat$Kvinder + navne.mat$Mænd
navne.mat$Andel.mænd             <- navne.mat$Mænd / navne.mat$Samlet
b <- c(0, 0.3, 0.7, 1)
kategori <- cut(navne.mat$Andel.mænd, b, include.lowest=TRUE, labels=c("Kvinde", "Binominal", "Mand"))
navne.mat$Kategori               <- kategori
names.gender                     <- navne.mat
save(names.gender, file="names_gender")
write.table(names.gender, file="names_gender.csv", sep="|")
setwd("~/Dropbox/R/soc.sna/")
load("names_gender")
load("net.inner")
rel         <- read.csv("Relation_BIQ_top.csv", sep="|", encoding="UTF-8")
setwd("~/Dropbox/R/soc.sna/")
load("names_gender")
rel         <- read.csv("Relation_BIQ_top.csv", sep="|", encoding="UTF-8")
navne <- rel$NAVN
navne
navne <- as.character(rel$NAVN)
køn <- vector(length=length(navne))
køn
n <- navne[1]
n
?grep
?substr
split(navne, " ")
split(navne, " ", fixed=TRUE)
split(navne, " ")
?strsplit
strsplit(navne, " ")
?sub
?substring
n.list <- strsplit(navne, " ")
n.list[1:5]
?subset
subset(n.list[1], 1)
i <- 1
n.list[i]
fornavne <- vector(length=length(navne))
n.list[i][1]
n.list[i][[1]]
n.list[[i]]
n.list[[i]][1]
n.list[[i]]
n.list[[i]][1]
1:length(fornavne)
length(fornavne)
fornavne <- vector(length=length(navne))
for (i in 1:length(fornavne)){
fornavne[i] <- n.list[[i]][1]
}
fornavne
table(fornavne)
sort(table(fornavne))
viewData(names.gender)
n <- fornavne[1]
n
names.gender[names.gender$Navn %in% n, ]
n <- ASBJØRN
n <- "ASBJØRN"
names.gender[names.gender$Navn %in% n, ]
names.gender[names.gender$Navn %in% n, ][6]
names.gender[names.gender$Navn %in% n, ][5]
?toupper
fornavne <- toupper(fornavne)
fornavne
køn   <- vector(length=length(navne))
for (i in 1:length(navne)){
n <- fornavne[i]
køn[i] <- names.gender[names.gender$Navn %in% n, ][5]
}
names.gender$Navn %in% n
table(køn)
køn
køn
køn   <- vector(length=length(navne))
køn   <- vector(length=100)
køn
for (i in 1:100){
n <- fornavne[i]
køn[i] <- names.gender[names.gender$Navn %in% n, ][5]
}
køn
names.gender[names.gender$Navn %in% n, ][5]
køn   <- vector(length=100)
for (i in 1:100){
n <- fornavne[i]
køn[i] <- names.gender[names.gender$Navn %in% n, ][[5]]
}
køn
køn   <- vector(length=length(navne))
for (i in 1:length(navne)){
n <- fornavne[i]
køn[i] <- names.gender[names.gender$Navn %in% n, ][[5]]
}
køn   <- vector(length=length(navne))
for (i in 1:length(navne)){
n <- fornavne[i]
køn[i] <- names.gender[names.gender$Navn %in% n, ][5]
}
viewData(names.gender)
n <- "KIM"
køn[i] <- names.gender[names.gender$Navn %in% n, ][5]
kim <- names.gender[names.gender$Navn %in% n, ][5]
kim
n <- "GERT"
kim <- names.gender[names.gender$Navn %in% n, ][5]
kim
n <- "A"
kim <- names.gender[names.gender$Navn %in% n, ][5]
kim
køn
køn <- unlist(køn)
length(køn)
length(fornavne)
n <- fornavne[i]
køn.navn <- names.gender[names.gender$Navn %in% n, ][5]
køn.navn
length(køn.navn)
køn   <- vector(length=length(navne))
for (i in 1:length(navne)){
n <- fornavne[i]
køn.navn <- names.gender[names.gender$Navn %in% n, ][5]
if identical(length(køn.navn),0){
køn.navn <- "MISSING"
}
køn[i]     <- køn.navn
}
køn   <- vector(length=length(navne))
for (i in 1:length(navne)){
n <- fornavne[i]
køn.navn <- names.gender[names.gender$Navn %in% n, ][5]
if identical(length(køn.navn),0){
køn.navn <- "MISSING"
}
køn[i]     <- køn.navn
}
køn   <- vector(length=length(navne))
for (i in 1:length(navne)){
n <- fornavne[i]
køn.navn <- names.gender[names.gender$Navn %in% n, ][5]
if identical(length(køn.navn),0){
køn   <- vector(length=length(navne))
for (i in 1:length(navne)){
n <- fornavne[i]
køn.navn <- names.gender[names.gender$Navn %in% n, ][5]
if (identical(length(køn.navn),0)){
køn.navn <- "MISSING"
}
køn[i]     <- køn.navn
}
køn
køn <- unlist(køn)
length(køn)
n <- "lsakjdflkajsdlkfjasældfjlksadf"
n <- "lsakjdflkajsdlkfjasældfjlksadf"
køn.navn <- names.gender[names.gender$Navn %in% n, ][5]
køn.navn
length(køn.navn)
str(køn.navn)
as.vector(køn.navn)
nrow(køn.navn)
køn   <- vector(length=length(navne))
for (i in 1:length(navne)){
n <- fornavne[i]
køn.navn <- names.gender[names.gender$Navn %in% n, ][5]
if (identical(nrow(køn.navn),0)){
køn.navn <- "MISSING"
}
køn[i]     <- køn.navn
}
køn
køn <- unlist(køn)
length(køn)
køn.navn <- names.gender[names.gender$Navn %in% n, ][5]
as.vector(køn.navn)
as.numeric(køn.navn)
køn
n <- "lsakjdflkajsdlkfjasældfjlksadf"
køn.navn <- names.gender[names.gender$Navn %in% n, ][5]
as.numeric(køn.navn)
length(køn.navn)
køn   <- vector(length=length(navne))
for (i in 1:length(navne)){
n <- fornavne[i]
køn.navn <- as.numeric(names.gender[names.gender$Navn %in% n, ][5])
# if (identical(length(køn.navn),0)){
#   køn.navn <- "MISSING"
}
køn[i]     <- køn.navn
}
køn
køn   <- vector(length=length(navne))
for (i in 1:length(navne)){
n <- fornavne[i]
køn.navn <- as.numeric(names.gender[names.gender$Navn %in% n, ][5])
# if (identical(length(køn.navn),0)){
#   køn.navn <- "MISSING"
#}
køn[i]     <- køn.navn
}
køn
table(køn)
summary(køn)
fornavne[køn==NA]
fornavne
fornavne[køn==NA]
fornavne[is.na(køn)]
grep(names.gender$Navn, "KIM")
b <- c(0, 0.3, 0.7, 1)
kategori <- cut(køn, b, include.lowest=TRUE, labels=c("Kvinde", "Binominal", "Mand"))
table(kategori)
summary(kategori)
fornavne[kategori=="Binominal"]
b <- c(0, 0.2, 0.8, 1)
kategori <- cut(køn, b, include.lowest=TRUE, labels=c("Kvinde", "Binominal", "Mand"))
summary(kategori)
fornavne[kategori=="Binominal"]
rel$køn <- kategori
viewData(rel)
rel$køn <- kategori
save(rel ,file="rel.gender")
save(rel ,file="rel.gender")
load("rel.gender")
viewData(rel)
load("inderkredsen")
V(net.inderkreds)$name
library(igraph)
V(net.inderkreds)$name
in.navne <- V(net.inderkreds)$name
load("names_gender")
find.køn <- function(navne, names.gender=names.gender){
n.list <- strsplit(navne, " ")
fornavne <- vector(length=length(navne))
for (i in 1:length(fornavne)){
fornavne[i] <- n.list[[i]][1]
}
fornavne <- toupper(fornavne)
køn   <- vector(length=length(navne))
for (i in 1:length(navne)){
n <- fornavne[i]
køn.navn <- as.numeric(names.gender[names.gender$Navn %in% n, ][5])
køn[i]     <- køn.navn
}
b <- c(0, 0.2, 0.8, 1)
kategori <- cut(køn, b, include.lowest=TRUE, labels=c("Kvinde", "Binominal", "Mand"))
return(kategori)
}
kan <- find.køn(navne)
navne <- as.character(rel$NAVN)
kan <- find.køn(navne)
kan <- find.køn(navne, names.gender)
in.navne <- V(net.inderkreds)$name
in.køn   <- find.køn(in.navne, names.gender)
in.køn
table(in.køn)
in.navne[in.køn=="Kvinde"]
